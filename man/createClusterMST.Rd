% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/createClusterMST.R
\name{createClusterMST}
\alias{createClusterMST}
\alias{connectClusterMST}
\alias{orderClusterMST}
\title{Minimum spanning trees on cluster centroids}
\usage{
createClusterMST(centers)

connectClusterMST(centers, mst, combined = TRUE)

orderClusterMST(x, ids, centers, mst, start = NULL)
}
\arguments{
\item{centers}{A numeric matrix of cluster centroids where each \emph{row} represents a cluster 
and each column represents a dimension (usually a PC or another low-dimensional embedding).
Each row should be named with the cluster name.}

\item{mst}{A \link{graph} object containing a MST, typically the output of \code{createClusterMST(centers)}.
For \code{connectClusterMSTNodes}, the MST may be computed from a different \code{centers}.}

\item{combined}{Logical scalar indicating whether a single data.frame of edge coordinates should be returned.}

\item{x}{A numeric matrix of per-cell coordinates where each \emph{row} represents a cell
and each column represents a dimension (again, usually a low-dimensional embedding).}

\item{ids}{A character vector of length equal to the number of cells,
specifying the cluster to which each cell is assigned.}

\item{start}{A string specifying the starting node from which to compute pseudotimes.
Defaults to an arbitrarily chosen node of degree 1.}
}
\value{
\code{createClusterMST} returns a \link{graph} object containing an MST computed on \code{centers}.

\code{connectClusterMST} returns, by default, a data.frame containing the start and end coordinates of segments representing all the edges in \code{mst}.
If \code{combined=FALSE}, a list of two data.frames is returned where corresponding rows represent the start and end coordinates of the same edge.

\code{orderClusterMST} returns a numeric matrix containing the pseudotimes of all cells (rows) across all paths (columns) through \code{mst}.
}
\description{
Perform basic trajectory analyses with minimum spanning trees (MST) computed on cluster centroids,
based on the methodology in the \pkg{TSCAN} package.
}
\details{
These functions represent some basic utilities for a simple trajectory analysis 
based on the algorithm in the \pkg{TSCAN} package.

\code{createClusterMST} builds a MST where each node is a cluster centroid and 
each edge is weighted by the Euclidean distance between centroids.
This represents the most parsimonious explanation for a particular trajectory
and has the advantage of being directly intepretable with respect to any pre-existing clusters.

\code{connectClusterMST} provides the coordinates of the start and end of every edge.
This is mostly useful for plotting purposes in \code{\link{segments}} or the equivalent \pkg{ggplot2} functionality.
We suggest using \code{\link{aggregateAcrossCells}} to obtain \code{centers} for multiple low-dimensional results at once.

\code{orderClusterMST} will map each cell to the closest edge involving the cluster to which it is assigned.
(Here, edges are segments terminated by their nodes, so some cells may simply be mapped to the edge terminus.)
It will then calculate the distance of that cell along the MST from the starting node specified by \code{start}.
This distance represents the pseudotime for that cell and can be used in further quantitative analyses.
}
\section{Breaking down the pseudotime matrix}{

The pseudotimes are returned as a matrix where each row corresponds to cell in \code{x} 
and each column corresponds to a path through the MST from \code{start} to all nodes of degree 1.
(If \code{start} is itself a node of degree 1, then paths are only considered to all other such nodes.)
This format is inspired by that from the \pkg{slingshot} package and provides a compact representation of branching events.

Each branching event in the MST results in a new path and thus a new column in the pseudotime matrix.
For any given row in this matrix, entries are either \code{NA} or they are identical.
This reflects the fact that multiple paths will share a section of the MST for which the pseudotimes are the same.

The starting node in \code{start} is \emph{completely arbitrarily chosen} by \code{orderClusterMST},
as directionality is impossible to infer from the expression matrix alone.
However, it is often possible to use prior biological knowledge to pick an appropriate cluster as the starting node.
}

\examples{
# Mocking up a Y-shaped trajectory.
centers <- rbind(c(0,0), c(0, -1), c(1, 1), c(-1, 1))
rownames(centers) <- seq_len(nrow(centers))
clusters <- sample(nrow(centers), 1000, replace=TRUE)
cells <- centers[clusters,]
cells <- cells + rnorm(length(cells), sd=0.5)

# Creating the MST first:
mst <- createClusterMST(centers)
plot(mst)

# Also plotting the MST on top of existing visualizations:
edges <- connectClusterMST(centers, mst, combined=FALSE)
plot(cells[,1], cells[,2], col=clusters)
segments(edges$start$dim1, edges$start$dim2, edges$end$dim1, 
     edges$end$dim2, lwd=5)

# Finally, obtaining pseudo-time orderings.
ordering <- orderClusterMST(cells, clusters, centers, mst)
unified <- rowMeans(ordering, na.rm=TRUE)
plot(cells[,1], cells[,2], col=topo.colors(21)[cut(unified, 21)], pch=16)

}
\references{
Ji Z and Ji H (2016).
TSCAN: Pseudo-time reconstruction and evaluation in single-cell RNA-seq analysis.
\emph{Nucleic Acids Res.} 44, e117
}
\author{
Aaron Lun
}
